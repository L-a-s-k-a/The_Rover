ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"pid.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/pid.c"
  18              		.section	.text.pid_reset,"ax",%progbits
  19              		.align	1
  20              		.global	pid_reset
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	pid_reset:
  26              	.LVL0:
  27              	.LFB66:
   1:Core/Src/pid.c **** /*
   2:Core/Src/pid.c ****  * pid.c
   3:Core/Src/pid.c ****  *
   4:Core/Src/pid.c ****  *  Created on: 31/03/2023
   5:Core/Src/pid.c ****  *      Author: JV4K
   6:Core/Src/pid.c ****  */
   7:Core/Src/pid.c **** 
   8:Core/Src/pid.c **** #include <pid.h>
   9:Core/Src/pid.c **** 
  10:Core/Src/pid.c **** #define constrain(amt,low,high) ((amt)<(low)?(low):((amt)>(high)?(high):(amt)))
  11:Core/Src/pid.c **** 
  12:Core/Src/pid.c **** // Calculates output based on passed setpoint and feedback, must be called with specified period
  13:Core/Src/pid.c **** void pid_calculate(pid_t *pid, float setpoint, float feedback) {
  14:Core/Src/pid.c **** 	pid->error = setpoint - feedback;
  15:Core/Src/pid.c **** 
  16:Core/Src/pid.c **** 	if ((pid->error > -(pid->toleranceBand)) && (pid->error < pid->toleranceBand)) {
  17:Core/Src/pid.c **** 		pid->error = 0;
  18:Core/Src/pid.c **** 		pid_reset(pid);
  19:Core/Src/pid.c **** 	}
  20:Core/Src/pid.c **** 
  21:Core/Src/pid.c **** 	pid->P = pid->error * pid->kp;
  22:Core/Src/pid.c **** 	pid->I += (pid->output - pid->rawOutput) * pid->kt + pid->error * pid->dt * pid->ki;
  23:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
  24:Core/Src/pid.c **** 
  25:Core/Src/pid.c **** 	pid->rawOutput = pid->P + pid->I + pid->D;
  26:Core/Src/pid.c **** 	pid->output = constrain(pid->rawOutput, pid->lowerLimit, pid->upperLimit);
  27:Core/Src/pid.c **** 	pid->previousError = pid->error;
  28:Core/Src/pid.c **** }
  29:Core/Src/pid.c **** 
  30:Core/Src/pid.c **** // Resets all the components and previous error
  31:Core/Src/pid.c **** void pid_reset(pid_t *pid) {
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 2


  28              		.loc 1 31 28 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  32:Core/Src/pid.c **** 	pid->P = 0;
  33              		.loc 1 32 2 view .LVU1
  34              		.loc 1 32 9 is_stmt 0 view .LVU2
  35 0000 0023     		movs	r3, #0
  36 0002 8361     		str	r3, [r0, #24]	@ float
  33:Core/Src/pid.c **** 	pid->I = 0;
  37              		.loc 1 33 2 is_stmt 1 view .LVU3
  38              		.loc 1 33 9 is_stmt 0 view .LVU4
  39 0004 C361     		str	r3, [r0, #28]	@ float
  34:Core/Src/pid.c **** 	pid->D = 0;
  40              		.loc 1 34 2 is_stmt 1 view .LVU5
  41              		.loc 1 34 9 is_stmt 0 view .LVU6
  42 0006 0362     		str	r3, [r0, #32]	@ float
  35:Core/Src/pid.c **** 	pid->previousError = 0;
  43              		.loc 1 35 2 is_stmt 1 view .LVU7
  44              		.loc 1 35 21 is_stmt 0 view .LVU8
  45 0008 8363     		str	r3, [r0, #56]	@ float
  36:Core/Src/pid.c **** 	pid->output = 0;
  46              		.loc 1 36 2 is_stmt 1 view .LVU9
  47              		.loc 1 36 14 is_stmt 0 view .LVU10
  48 000a 4363     		str	r3, [r0, #52]	@ float
  37:Core/Src/pid.c **** }
  49              		.loc 1 37 1 view .LVU11
  50 000c 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE66:
  54              		.global	__aeabi_fsub
  55              		.global	__aeabi_fcmpgt
  56              		.global	__aeabi_fcmplt
  57              		.global	__aeabi_fmul
  58              		.global	__aeabi_fadd
  59              		.global	__aeabi_fdiv
  60              		.section	.text.pid_calculate,"ax",%progbits
  61              		.align	1
  62              		.global	pid_calculate
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	pid_calculate:
  68              	.LVL1:
  69              	.LFB65:
  13:Core/Src/pid.c **** 	pid->error = setpoint - feedback;
  70              		.loc 1 13 64 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  13:Core/Src/pid.c **** 	pid->error = setpoint - feedback;
  74              		.loc 1 13 64 is_stmt 0 view .LVU13
  75 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  76              		.cfi_def_cfa_offset 32
  77              		.cfi_offset 3, -32
  78              		.cfi_offset 4, -28
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 3


  79              		.cfi_offset 5, -24
  80              		.cfi_offset 6, -20
  81              		.cfi_offset 7, -16
  82              		.cfi_offset 8, -12
  83              		.cfi_offset 9, -8
  84              		.cfi_offset 14, -4
  85 0004 0446     		mov	r4, r0
  86 0006 0846     		mov	r0, r1
  87              	.LVL2:
  14:Core/Src/pid.c **** 
  88              		.loc 1 14 2 is_stmt 1 view .LVU14
  14:Core/Src/pid.c **** 
  89              		.loc 1 14 24 is_stmt 0 view .LVU15
  90 0008 1146     		mov	r1, r2
  91              	.LVL3:
  14:Core/Src/pid.c **** 
  92              		.loc 1 14 24 view .LVU16
  93 000a FFF7FEFF 		bl	__aeabi_fsub
  94              	.LVL4:
  14:Core/Src/pid.c **** 
  95              		.loc 1 14 24 view .LVU17
  96 000e 0546     		mov	r5, r0
  14:Core/Src/pid.c **** 
  97              		.loc 1 14 13 view .LVU18
  98 0010 2060     		str	r0, [r4]	@ float
  16:Core/Src/pid.c **** 		pid->error = 0;
  99              		.loc 1 16 2 is_stmt 1 view .LVU19
  16:Core/Src/pid.c **** 		pid->error = 0;
 100              		.loc 1 16 25 is_stmt 0 view .LVU20
 101 0012 6669     		ldr	r6, [r4, #20]	@ float
  16:Core/Src/pid.c **** 		pid->error = 0;
 102              		.loc 1 16 20 view .LVU21
 103 0014 06F10041 		add	r1, r6, #-2147483648
  16:Core/Src/pid.c **** 		pid->error = 0;
 104              		.loc 1 16 5 view .LVU22
 105 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 106              	.LVL5:
 107 001c 28B1     		cbz	r0, .L3
  16:Core/Src/pid.c **** 		pid->error = 0;
 108              		.loc 1 16 43 discriminator 1 view .LVU23
 109 001e 3146     		mov	r1, r6
 110 0020 2846     		mov	r0, r5
 111 0022 FFF7FEFF 		bl	__aeabi_fcmplt
 112              	.LVL6:
 113 0026 0028     		cmp	r0, #0
 114 0028 49D1     		bne	.L12
 115              	.L3:
  21:Core/Src/pid.c **** 	pid->I += (pid->output - pid->rawOutput) * pid->kt + pid->error * pid->dt * pid->ki;
 116              		.loc 1 21 2 is_stmt 1 view .LVU24
  21:Core/Src/pid.c **** 	pid->I += (pid->output - pid->rawOutput) * pid->kt + pid->error * pid->dt * pid->ki;
 117              		.loc 1 21 14 is_stmt 0 view .LVU25
 118 002a 2568     		ldr	r5, [r4]	@ float
  21:Core/Src/pid.c **** 	pid->I += (pid->output - pid->rawOutput) * pid->kt + pid->error * pid->dt * pid->ki;
 119              		.loc 1 21 22 view .LVU26
 120 002c 6168     		ldr	r1, [r4, #4]	@ float
 121 002e 2846     		mov	r0, r5
 122 0030 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 4


 123              	.LVL7:
 124 0034 0746     		mov	r7, r0
  21:Core/Src/pid.c **** 	pid->I += (pid->output - pid->rawOutput) * pid->kt + pid->error * pid->dt * pid->ki;
 125              		.loc 1 21 9 view .LVU27
 126 0036 A061     		str	r0, [r4, #24]	@ float
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 127              		.loc 1 22 2 is_stmt 1 view .LVU28
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 128              		.loc 1 22 5 is_stmt 0 view .LVU29
 129 0038 D4F81C80 		ldr	r8, [r4, #28]	@ float
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 130              		.loc 1 22 25 view .LVU30
 131 003c 216B     		ldr	r1, [r4, #48]	@ float
 132 003e 606B     		ldr	r0, [r4, #52]	@ float
 133 0040 FFF7FEFF 		bl	__aeabi_fsub
 134              	.LVL8:
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 135              		.loc 1 22 43 view .LVU31
 136 0044 2169     		ldr	r1, [r4, #16]	@ float
 137 0046 FFF7FEFF 		bl	__aeabi_fmul
 138              	.LVL9:
 139 004a 0646     		mov	r6, r0
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 140              		.loc 1 22 71 view .LVU32
 141 004c D4F82490 		ldr	r9, [r4, #36]	@ float
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 142              		.loc 1 22 66 view .LVU33
 143 0050 4946     		mov	r1, r9
 144 0052 2846     		mov	r0, r5
 145 0054 FFF7FEFF 		bl	__aeabi_fmul
 146              	.LVL10:
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 147              		.loc 1 22 76 view .LVU34
 148 0058 A168     		ldr	r1, [r4, #8]	@ float
 149 005a FFF7FEFF 		bl	__aeabi_fmul
 150              	.LVL11:
 151 005e 0146     		mov	r1, r0
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 152              		.loc 1 22 53 view .LVU35
 153 0060 3046     		mov	r0, r6
 154 0062 FFF7FEFF 		bl	__aeabi_fadd
 155              	.LVL12:
 156 0066 0146     		mov	r1, r0
  22:Core/Src/pid.c **** 	pid->D = ((pid->error - pid->previousError) * pid->kd) / pid->dt;
 157              		.loc 1 22 9 view .LVU36
 158 0068 4046     		mov	r0, r8
 159 006a FFF7FEFF 		bl	__aeabi_fadd
 160              	.LVL13:
 161 006e 8046     		mov	r8, r0
 162 0070 E061     		str	r0, [r4, #28]	@ float
  23:Core/Src/pid.c **** 
 163              		.loc 1 23 2 is_stmt 1 view .LVU37
  23:Core/Src/pid.c **** 
 164              		.loc 1 23 24 is_stmt 0 view .LVU38
 165 0072 A16B     		ldr	r1, [r4, #56]	@ float
 166 0074 2846     		mov	r0, r5
 167 0076 FFF7FEFF 		bl	__aeabi_fsub
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 5


 168              	.LVL14:
  23:Core/Src/pid.c **** 
 169              		.loc 1 23 46 view .LVU39
 170 007a E168     		ldr	r1, [r4, #12]	@ float
 171 007c FFF7FEFF 		bl	__aeabi_fmul
 172              	.LVL15:
  23:Core/Src/pid.c **** 
 173              		.loc 1 23 57 view .LVU40
 174 0080 4946     		mov	r1, r9
 175 0082 FFF7FEFF 		bl	__aeabi_fdiv
 176              	.LVL16:
 177 0086 0646     		mov	r6, r0
  23:Core/Src/pid.c **** 
 178              		.loc 1 23 9 view .LVU41
 179 0088 2062     		str	r0, [r4, #32]	@ float
  25:Core/Src/pid.c **** 	pid->output = constrain(pid->rawOutput, pid->lowerLimit, pid->upperLimit);
 180              		.loc 1 25 2 is_stmt 1 view .LVU42
  25:Core/Src/pid.c **** 	pid->output = constrain(pid->rawOutput, pid->lowerLimit, pid->upperLimit);
 181              		.loc 1 25 26 is_stmt 0 view .LVU43
 182 008a 4146     		mov	r1, r8
 183 008c 3846     		mov	r0, r7
 184 008e FFF7FEFF 		bl	__aeabi_fadd
 185              	.LVL17:
 186 0092 0146     		mov	r1, r0
  25:Core/Src/pid.c **** 	pid->output = constrain(pid->rawOutput, pid->lowerLimit, pid->upperLimit);
 187              		.loc 1 25 35 view .LVU44
 188 0094 3046     		mov	r0, r6
 189 0096 FFF7FEFF 		bl	__aeabi_fadd
 190              	.LVL18:
 191 009a 0646     		mov	r6, r0
  25:Core/Src/pid.c **** 	pid->output = constrain(pid->rawOutput, pid->lowerLimit, pid->upperLimit);
 192              		.loc 1 25 17 view .LVU45
 193 009c 2063     		str	r0, [r4, #48]	@ float
  26:Core/Src/pid.c **** 	pid->previousError = pid->error;
 194              		.loc 1 26 2 is_stmt 1 view .LVU46
  26:Core/Src/pid.c **** 	pid->previousError = pid->error;
 195              		.loc 1 26 16 is_stmt 0 view .LVU47
 196 009e E76A     		ldr	r7, [r4, #44]	@ float
 197 00a0 3946     		mov	r1, r7
 198 00a2 FFF7FEFF 		bl	__aeabi_fcmplt
 199              	.LVL19:
 200 00a6 30B9     		cbnz	r0, .L6
  26:Core/Src/pid.c **** 	pid->previousError = pid->error;
 201              		.loc 1 26 16 discriminator 2 view .LVU48
 202 00a8 A76A     		ldr	r7, [r4, #40]	@ float
 203 00aa 3946     		mov	r1, r7
 204 00ac 3046     		mov	r0, r6
 205 00ae FFF7FEFF 		bl	__aeabi_fcmpgt
 206              	.LVL20:
 207 00b2 00B9     		cbnz	r0, .L6
  26:Core/Src/pid.c **** 	pid->previousError = pid->error;
 208              		.loc 1 26 16 discriminator 5 view .LVU49
 209 00b4 3746     		mov	r7, r6
 210              	.L6:
  26:Core/Src/pid.c **** 	pid->previousError = pid->error;
 211              		.loc 1 26 14 discriminator 8 view .LVU50
 212 00b6 6763     		str	r7, [r4, #52]	@ float
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 6


  27:Core/Src/pid.c **** }
 213              		.loc 1 27 2 is_stmt 1 view .LVU51
  27:Core/Src/pid.c **** }
 214              		.loc 1 27 21 is_stmt 0 view .LVU52
 215 00b8 A563     		str	r5, [r4, #56]	@ float
  28:Core/Src/pid.c **** 
 216              		.loc 1 28 1 view .LVU53
 217 00ba BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 218              	.LVL21:
 219              	.L12:
  17:Core/Src/pid.c **** 		pid_reset(pid);
 220              		.loc 1 17 3 is_stmt 1 view .LVU54
  17:Core/Src/pid.c **** 		pid_reset(pid);
 221              		.loc 1 17 14 is_stmt 0 view .LVU55
 222 00be 0023     		movs	r3, #0
 223 00c0 2360     		str	r3, [r4]	@ float
  18:Core/Src/pid.c **** 	}
 224              		.loc 1 18 3 is_stmt 1 view .LVU56
 225 00c2 2046     		mov	r0, r4
 226 00c4 FFF7FEFF 		bl	pid_reset
 227              	.LVL22:
 228 00c8 AFE7     		b	.L3
 229              		.cfi_endproc
 230              	.LFE65:
 232              		.section	.text.pid_getOutput,"ax",%progbits
 233              		.align	1
 234              		.global	pid_getOutput
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	pid_getOutput:
 240              	.LVL23:
 241              	.LFB67:
  38:Core/Src/pid.c **** 
  39:Core/Src/pid.c **** float pid_getOutput(pid_t *pid) {
 242              		.loc 1 39 33 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
  40:Core/Src/pid.c **** 	return pid->output;
 247              		.loc 1 40 2 view .LVU58
  41:Core/Src/pid.c **** }
 248              		.loc 1 41 1 is_stmt 0 view .LVU59
 249 0000 406B     		ldr	r0, [r0, #52]	@ float
 250              	.LVL24:
 251              		.loc 1 41 1 view .LVU60
 252 0002 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE67:
 256              		.section	.text.pid_init,"ax",%progbits
 257              		.align	1
 258              		.global	pid_init
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	pid_init:
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 7


 264              	.LVL25:
 265              	.LFB68:
  42:Core/Src/pid.c **** 
  43:Core/Src/pid.c **** // Initialization with gains and update period
  44:Core/Src/pid.c **** void pid_init(pid_t *pid, float Kp, float Ki, float Kd, float Frequency) {
 266              		.loc 1 44 74 is_stmt 1 view -0
 267              		.cfi_startproc
 268              		@ args = 4, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		.loc 1 44 74 is_stmt 0 view .LVU62
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 0446     		mov	r4, r0
  45:Core/Src/pid.c **** 	pid->kp = Kp;
 276              		.loc 1 45 2 is_stmt 1 view .LVU63
 277              		.loc 1 45 10 is_stmt 0 view .LVU64
 278 0004 4160     		str	r1, [r0, #4]	@ float
  46:Core/Src/pid.c **** 	pid->ki = Ki;
 279              		.loc 1 46 2 is_stmt 1 view .LVU65
 280              		.loc 1 46 10 is_stmt 0 view .LVU66
 281 0006 8260     		str	r2, [r0, #8]	@ float
  47:Core/Src/pid.c **** 	pid->kd = Kd;
 282              		.loc 1 47 2 is_stmt 1 view .LVU67
 283              		.loc 1 47 10 is_stmt 0 view .LVU68
 284 0008 C360     		str	r3, [r0, #12]	@ float
  48:Core/Src/pid.c **** 	pid->dt = (float) 1 / Frequency;
 285              		.loc 1 48 2 is_stmt 1 view .LVU69
 286              		.loc 1 48 22 is_stmt 0 view .LVU70
 287 000a 0299     		ldr	r1, [sp, #8]	@ float
 288              	.LVL26:
 289              		.loc 1 48 22 view .LVU71
 290 000c 4FF07E50 		mov	r0, #1065353216
 291              	.LVL27:
 292              		.loc 1 48 22 view .LVU72
 293 0010 FFF7FEFF 		bl	__aeabi_fdiv
 294              	.LVL28:
 295              		.loc 1 48 10 view .LVU73
 296 0014 6062     		str	r0, [r4, #36]	@ float
  49:Core/Src/pid.c **** }
 297              		.loc 1 49 1 view .LVU74
 298 0016 10BD     		pop	{r4, pc}
 299              		.loc 1 49 1 view .LVU75
 300              		.cfi_endproc
 301              	.LFE68:
 303              		.section	.text.pid_setGains,"ax",%progbits
 304              		.align	1
 305              		.global	pid_setGains
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 310              	pid_setGains:
 311              	.LVL29:
 312              	.LFB69:
  50:Core/Src/pid.c **** 
  51:Core/Src/pid.c **** void pid_setGains(pid_t *pid, float Kp, float Ki, float Kd) {
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 8


 313              		.loc 1 51 61 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
  52:Core/Src/pid.c **** 	pid->kp = Kp;
 318              		.loc 1 52 2 view .LVU77
 319              		.loc 1 52 10 is_stmt 0 view .LVU78
 320 0000 4160     		str	r1, [r0, #4]	@ float
  53:Core/Src/pid.c **** 	pid->ki = Ki;
 321              		.loc 1 53 2 is_stmt 1 view .LVU79
 322              		.loc 1 53 10 is_stmt 0 view .LVU80
 323 0002 8260     		str	r2, [r0, #8]	@ float
  54:Core/Src/pid.c **** 	pid->kd = Kd;
 324              		.loc 1 54 2 is_stmt 1 view .LVU81
 325              		.loc 1 54 10 is_stmt 0 view .LVU82
 326 0004 C360     		str	r3, [r0, #12]	@ float
  55:Core/Src/pid.c **** }
 327              		.loc 1 55 1 view .LVU83
 328 0006 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE69:
 332              		.section	.text.pid_setAntiWindup,"ax",%progbits
 333              		.align	1
 334              		.global	pid_setAntiWindup
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 339              	pid_setAntiWindup:
 340              	.LVL30:
 341              	.LFB70:
  56:Core/Src/pid.c **** 
  57:Core/Src/pid.c **** void pid_setAntiWindup(pid_t *pid, float Kt) {
 342              		.loc 1 57 46 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
  58:Core/Src/pid.c **** 	pid->kt = Kt;
 347              		.loc 1 58 2 view .LVU85
 348              		.loc 1 58 10 is_stmt 0 view .LVU86
 349 0000 0161     		str	r1, [r0, #16]	@ float
  59:Core/Src/pid.c **** }
 350              		.loc 1 59 1 view .LVU87
 351 0002 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE70:
 355              		.section	.text.pid_setLimits,"ax",%progbits
 356              		.align	1
 357              		.global	pid_setLimits
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	pid_setLimits:
 363              	.LVL31:
 364              	.LFB71:
  60:Core/Src/pid.c **** 
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 9


  61:Core/Src/pid.c **** void pid_setLimits(pid_t *pid, float LowerLimit, float UpperLimit) {
 365              		.loc 1 61 68 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
  62:Core/Src/pid.c **** 	pid->lowerLimit = LowerLimit;
 370              		.loc 1 62 2 view .LVU89
 371              		.loc 1 62 18 is_stmt 0 view .LVU90
 372 0000 C162     		str	r1, [r0, #44]	@ float
  63:Core/Src/pid.c **** 	pid->upperLimit = UpperLimit;
 373              		.loc 1 63 2 is_stmt 1 view .LVU91
 374              		.loc 1 63 18 is_stmt 0 view .LVU92
 375 0002 8262     		str	r2, [r0, #40]	@ float
  64:Core/Src/pid.c **** }
 376              		.loc 1 64 1 view .LVU93
 377 0004 7047     		bx	lr
 378              		.cfi_endproc
 379              	.LFE71:
 381              		.section	.text.pid_setUpperLimit,"ax",%progbits
 382              		.align	1
 383              		.global	pid_setUpperLimit
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	pid_setUpperLimit:
 389              	.LVL32:
 390              	.LFB72:
  65:Core/Src/pid.c **** 
  66:Core/Src/pid.c **** void pid_setUpperLimit(pid_t *pid, float UpperLimit) {
 391              		.loc 1 66 54 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
  67:Core/Src/pid.c **** 	pid->upperLimit = UpperLimit;
 396              		.loc 1 67 2 view .LVU95
 397              		.loc 1 67 18 is_stmt 0 view .LVU96
 398 0000 8162     		str	r1, [r0, #40]	@ float
  68:Core/Src/pid.c **** }
 399              		.loc 1 68 1 view .LVU97
 400 0002 7047     		bx	lr
 401              		.cfi_endproc
 402              	.LFE72:
 404              		.section	.text.pid_setLowerLimit,"ax",%progbits
 405              		.align	1
 406              		.global	pid_setLowerLimit
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 411              	pid_setLowerLimit:
 412              	.LVL33:
 413              	.LFB73:
  69:Core/Src/pid.c **** 
  70:Core/Src/pid.c **** void pid_setLowerLimit(pid_t *pid, float LowerLimit) {
 414              		.loc 1 70 54 is_stmt 1 view -0
 415              		.cfi_startproc
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 10


 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
  71:Core/Src/pid.c **** 	pid->lowerLimit = LowerLimit;
 419              		.loc 1 71 2 view .LVU99
 420              		.loc 1 71 18 is_stmt 0 view .LVU100
 421 0000 C162     		str	r1, [r0, #44]	@ float
  72:Core/Src/pid.c **** }
 422              		.loc 1 72 1 view .LVU101
 423 0002 7047     		bx	lr
 424              		.cfi_endproc
 425              	.LFE73:
 427              		.section	.text.pid_setToleranceBand,"ax",%progbits
 428              		.align	1
 429              		.global	pid_setToleranceBand
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	pid_setToleranceBand:
 435              	.LVL34:
 436              	.LFB74:
  73:Core/Src/pid.c **** 
  74:Core/Src/pid.c **** void pid_setToleranceBand(pid_t *pid, float ToleranceBand) {
 437              		.loc 1 74 60 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
  75:Core/Src/pid.c **** 	pid->toleranceBand = ToleranceBand;
 442              		.loc 1 75 2 view .LVU103
 443              		.loc 1 75 21 is_stmt 0 view .LVU104
 444 0000 4161     		str	r1, [r0, #20]	@ float
  76:Core/Src/pid.c **** }
 445              		.loc 1 76 1 view .LVU105
 446 0002 7047     		bx	lr
 447              		.cfi_endproc
 448              	.LFE74:
 450              		.text
 451              	.Letext0:
 452              		.file 2 "Core/Inc/pid.h"
ARM GAS  C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 pid.c
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:19     .text.pid_reset:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:25     .text.pid_reset:00000000 pid_reset
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:61     .text.pid_calculate:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:67     .text.pid_calculate:00000000 pid_calculate
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:233    .text.pid_getOutput:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:239    .text.pid_getOutput:00000000 pid_getOutput
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:257    .text.pid_init:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:263    .text.pid_init:00000000 pid_init
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:304    .text.pid_setGains:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:310    .text.pid_setGains:00000000 pid_setGains
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:333    .text.pid_setAntiWindup:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:339    .text.pid_setAntiWindup:00000000 pid_setAntiWindup
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:356    .text.pid_setLimits:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:362    .text.pid_setLimits:00000000 pid_setLimits
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:382    .text.pid_setUpperLimit:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:388    .text.pid_setUpperLimit:00000000 pid_setUpperLimit
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:405    .text.pid_setLowerLimit:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:411    .text.pid_setLowerLimit:00000000 pid_setLowerLimit
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:428    .text.pid_setToleranceBand:00000000 $t
C:\Users\matve\AppData\Local\Temp\ccGe7qSM.s:434    .text.pid_setToleranceBand:00000000 pid_setToleranceBand

UNDEFINED SYMBOLS
__aeabi_fsub
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
